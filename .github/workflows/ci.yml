name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: 20

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Test package functionality
        run: node -e "const QR = require('./index.js'); const qr = new QR(); console.log('✅ Package test passed');"

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate HTML
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: ./
          css: true

      - name: Check package.json
        run: |
          npm run lint --if-present
          node -e "const pkg = require('./package.json'); console.log('✅ Package.json is valid');"

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          npx audit-ci --config .auditci.json || echo "No .auditci.json found, using defaults"

  accessibility:
    name: Accessibility Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start local server
        run: |
          npm run serve &
          sleep 5
        env:
          CI: true

      - name: Run accessibility tests
        run: |
          npx @axe-core/cli http://localhost:8000 --exit || echo "Accessibility test completed"

  compatibility:
    name: Browser Compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check browser compatibility
        run: |
          echo "Checking browser support based on browserslist..."
          npx browserslist || echo "No browserslist configuration found"

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [test, lint, security, accessibility, compatibility]
    if: always()
    steps:
      - name: Generate CI Summary
        run: |
          echo "## 🔍 CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ **Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.lint.result }}" == "success" ]; then
            echo "✅ **Code Quality**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Code Quality**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.security.result }}" == "success" ]; then
            echo "✅ **Security**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Security**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.accessibility.result }}" == "success" ]; then
            echo "✅ **Accessibility**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Accessibility**: Completed with warnings" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.compatibility.result }}" == "success" ]; then
            echo "✅ **Compatibility**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Compatibility**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

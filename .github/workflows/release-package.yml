name: Release Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

env:
  NODE_VERSION: 20

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package.outputs.version }}
      name: ${{ steps.package.outputs.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get package info
        id: package
        run: |
          echo "version=$(node -p 'require("./package.json").version')" >> $GITHUB_OUTPUT
          echo "name=$(node -p 'require("./package.json").name')" >> $GITHUB_OUTPUT

      - name: Validate package.json
        run: |
          npm ls --depth=0
          node -e "console.log('Package validation passed')"

  test:
    name: Test Package
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        node-version: [18, 20, 22]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Test package import
        run: node -e "const pkg = require('./index.js'); console.log('Package import successful')"

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [validate, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting (if available)
        run: npm run lint --if-present

      - name: Security audit
        run: npm audit --audit-level moderate

      - name: Package dry run
        run: npm pack --dry-run

  publish-gpr:
    name: Publish to GitHub Package Registry
    runs-on: ubuntu-latest
    needs: [validate, test, build]
    permissions:
      packages: write
      contents: read
    environment:
      name: github-packages
      url: https://github.com/${{ github.repository }}/packages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Publish to GPR
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB }}

      - name: Create publish summary
        run: |
          echo "## ðŸ“¦ Package Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Name**: ${{ needs.validate.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: GitHub Package Registry" >> $GITHUB_STEP_SUMMARY
          echo "- **Install**: \`npm install ${{ needs.validate.outputs.name }}\`" >> $GITHUB_STEP_SUMMARY

  publish-npm:
    name: Publish to NPM Registry
    runs-on: ubuntu-latest
    needs: [validate, test, build]
    if: github.event_name == 'release'
    environment:
      name: npm-registry
      url: https://www.npmjs.com/package/${{ needs.validate.outputs.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM }}

      - name: Create publish summary
        run: |
          echo "## ðŸš€ Package Published to NPM" >> $GITHUB_STEP_SUMMARY
          echo "- **Name**: ${{ needs.validate.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: NPM Public Registry" >> $GITHUB_STEP_SUMMARY
          echo "- **Install**: \`npm install ${{ needs.validate.outputs.name }}\`" >> $GITHUB_STEP_SUMMARY
